import streamlit as st
import requests
from datetime import datetime

API_BASE_URL = "http://192.168.1.50:80"

def get_all_orders():
    try:
        response = requests.get(f"{API_BASE_URL}/orders")
        response.raise_for_status()
        return response.json()
    except requests.exceptions.RequestException as e:
        st.error(f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ: {e}")
        return []

st.set_page_config(layout="wide", page_title="‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠")
st.title("üßæ ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á")

orders = get_all_orders()

if not orders:
    st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö")
else:
    st.divider()
    for order in orders:
        order_date = datetime.fromisoformat(order['order_date']).strftime('%d %b %Y, %H:%M:%S')
        with st.expander(f"**Order ID:** `{order['id']}` | **‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:** {order_date} | **‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°:** {order['total_amount']:.2f} ‡∏ö‡∏≤‡∏ó"):
            st.write(f"**‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:** {order['status']}")
            st.markdown("---")
            st.write("**‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:**")
            cols = st.columns([3, 1, 1, 2])
            cols[0].write("**‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤**")
            cols[1].write("**‡∏à‡∏≥‡∏ô‡∏ß‡∏ô**")
            cols[2].write("**‡∏£‡∏≤‡∏Ñ‡∏≤/‡∏´‡∏ô‡πà‡∏ß‡∏¢**")
            cols[3].write("**‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å**")
            for item in order['items']:
                item_cols = st.columns([3, 1, 1, 2])
                item_cols[0].write(f" ‚ñ∏ {item['product_name']}")
                item_cols[1].text(item['quantity'])
                item_cols[2].text(f"{item['price_per_unit']:.2f}")
                options_str = ", ".join([opt['name'] for opt in item['selected_options']]) if item['selected_options'] else "‡πÑ‡∏°‡πà‡∏°‡∏µ"
                item_cols[3].text(options_str)