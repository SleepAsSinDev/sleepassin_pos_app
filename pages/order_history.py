# pages/2_üßæ_Order_History.py

import streamlit as st
import requests
from datetime import datetime

# -----------------------------------------------------------------------------
# ‚öôÔ∏è ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô (‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡πÑ‡∏î‡πâ)
# -----------------------------------------------------------------------------

# !!! ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç IP Address ‡∏Ç‡∏≠‡∏á Raspberry Pi ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ !!!
API_BASE_URL = "http://192.168.137.22:8000"

def get_all_orders():
    """‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Backend"""
    try:
        response = requests.get(f"{API_BASE_URL}/orders")
        response.raise_for_status()
        return response.json()
    except requests.exceptions.RequestException as e:
        st.error(f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ: {e}")
        return []

# -----------------------------------------------------------------------------
# üñºÔ∏è ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• (UI Layout)
# -----------------------------------------------------------------------------

st.set_page_config(layout="wide", page_title="‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠")
st.title("üßæ ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á")
st.write("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤")

# ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤
orders = get_all_orders()

if not orders:
    st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö")
else:
    # ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏° Filter ‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï
    st.divider()
    
    # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    for order in orders:
        order_id = order['id']
        # ‡πÅ‡∏õ‡∏•‡∏á string ‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô object datetime ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
        order_date = datetime.fromisoformat(order['order_date']).strftime('%d %b %Y, %H:%M:%S')
        total_amount = order['total_amount']
        
        # ‡πÉ‡∏ä‡πâ st.expander ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏î‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå
        with st.expander(f"**Order ID:** `{order_id}` | **‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:** {order_date} | **‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°:** {total_amount:.2f} ‡∏ö‡∏≤‡∏ó"):
            
            st.write(f"**‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:** {order['status']}")
            st.markdown("---")
            
            # ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ô‡∏±‡πâ‡∏ô‡πÜ
            st.write("**‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:**")
            
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á Header ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
            cols = st.columns([3, 1, 1])
            cols[0].write("**‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤**")
            cols[1].write("**‡∏à‡∏≥‡∏ô‡∏ß‡∏ô**")
            cols[2].write("**‡∏£‡∏≤‡∏Ñ‡∏≤**")
            
            # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
            for item in order['items']:
                item_cols = st.columns([3, 1, 1])
                item_cols[0].write(f" ‚ñ∏ {item['product_name']}")
                item_cols[1].text(item['quantity'])
                item_cols[2].text(f"{item['price_per_item']:.2f}")